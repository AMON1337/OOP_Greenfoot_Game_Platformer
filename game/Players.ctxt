#BlueJ class context
comment0.target=Players
comment0.text=\r\n\ This\ will\ have\ the\ basic\ set\ of\ moves\ that\ the\ players\ will\ have\!\r\n\ \r\n
comment1.params=
comment1.target=void\ act()
comment1.text=\r\n\ Act\ -\ do\ whatever\ the\ Players\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment2.params=keyRight\ keyLeft\ keyJump
comment2.target=void\ movement(java.lang.String,\ java.lang.String,\ java.lang.String)
comment2.text=\ \r\n\ Player\ Movement\r\n\ This\ can\ be\ access\ by\ both\ players\ \r\n
comment3.params=
comment3.target=void\ gravity()
comment3.text=\ \r\n\ Players\ Physics\ \ (JUMP\ &&\ FALL)\ \ \ \r\n
comment4.params=
comment4.target=boolean\ onPlatforms()
comment5.params=
comment5.target=void\ checkFalling()
comment6.params=run\ idle
comment6.target=void\ run_Anim(greenfoot.GreenfootImage[],\ greenfoot.GreenfootImage)
comment6.text=\ \r\n\ Players\ Run\ Animation\r\n\ This\ is\ used\ to\ loop\ the\ array\ of\ animetion\ to\ create\r\n\ the\ illusion\ of\ running.\r\n
comment7.params=jump
comment7.target=void\ jump_Anim(greenfoot.GreenfootImage)
comment7.text=\ \r\n\ Players\ Jump\ Animation\r\n\ This\ is\ simpler,\ we\ just\ used\ one\ image\ so\ if\ the\ player\ is\ not\ on\ a\ platforms\ \r\n\ then\ play\ the\ jump/falling\ image\ "animation"\r\n\ \r\n
comment8.params=
comment8.target=void\ spawnTrash()
comment8.text=\ \r\n\ Methods\ to\ spawn\ Trash\r\n\ This\ method\ makes\ more\ to\ be\ in\ Mission.class\ but\ the\ did\ it\ here\ so\ we\ can\r\n\ implement\ this\ version\ on\ Player1\r\n\ and\ Override\ the\ method\ on\ Player2\ \r\n\ to\ exemplify\ the\ function\ @Override\r\n
comment9.params=
comment9.target=void\ collect()
comment9.text=\ \r\n\ Methods\ to\ add\ Points\ to\ SCORE\!\r\n\ addScore\ Method\ on\ Mission1\ World\r\n
numComments=10
